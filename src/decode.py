import struct

def base_convert(number, from_base, to_base):
    return format(int(number, from_base), f'0{to_base}d')

# 堀元さんという人間と&#13;味覚が似ている
data = 'rAEAAAAAAABEMyIRFAAAAAAADgAKAAQAAAAAAAAACQAOAAAAZAAAAAABXgAcABAADAAAAAAAAAAAAAAAAAAAAAAAGAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAHAF4AAAAAAAABFAAAACQAAABEAAAAAAAAARAAAABg////ZP///2j///9G////AAIIJgEAAAAEAAAAFgAAAE5vdG9TZXJpZkpQLUV4dHJhTGlnaHQAAAEAAAAMAAAACAAMAAQACAAIAAAAjAAAADgAAAA0ABgAAAAAABQAAAAQAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQANAAAABgAAAAcAAAAAAAAASQAAAA0AAAABAAEAAQAAAAEAAYABAAAAAAACgAKAAcACAAJAAoAAAAAAAACCCYKAAgABQAGAAcACgAAAADq3c80AAAA5aCA5YWD44GV44KT44Go44GE44GG5Lq66ZaT44GoDeWRs+immuOBjOS8vOOBpuOBhOOCiwAAAAA='
print(data)
data_bytes = bytes(data, 'utf-8')
print(data_bytes)
new_decode = ''
for i in range(len(data_bytes)):
    v = struct.unpack('H', data_bytes[i:i+1])[0]
    converted = base_convert(v[0], 16, 2)
    if converted != '0':
        new_decode += data_bytes[i:i+1]

print(new_decode)
